#include <msp430G2553.h>
#include <stdio.h>
#include <stdlib.h>



#define INT_MAX  2147483647

volatile float temp_max, temp_min,temp_atual; //global variables





void testbenchl(){
    temp_max = 140;//teste 50 graus
    temp_min = 40;// teste 20 graus
    temp_atual = 0;//test bench tempo 0 graus
}

void delay(){//testbench esperar tempo
    int i,f,c;
    for(i=214748;i>1;--i){
        for(f=214748;f>1;--f){
            for(c=214748;c>1;--c);
        }
    }

}






void setup_PWM(){


    P2DIR |= BIT1;// set P2.1 as output
    P2SEL |= BIT1 ;// set P2.1 como saida do PWM

    TA1CCR0 = 1000; //Set the period in the Timer A0 Capture/Compare 0 register to 1000 us.
    TA1CCTL1 = OUTMOD_7;//modo PWM
    TA1CCR1 = 900; //The period in microseconds that the power is ON. It's half the time, which translates to a 50%
    TA1CTL = TASSEL_0 + MC_1;

}

void check_motor(){
    if(temp_atual>temp_min){
        if(temp_atual>temp_max){
            TA1CTL = TASSEL_1 + MC_1;
            TA1CCR1 = 1000;// PWM no maximo
        }
        else{
            TA1CTL = TASSEL_1 + MC_1;
            TA1CCR1 = (int)(((temp_atual-temp_min)*(1000))/(temp_max-temp_min));// % * max value para PWM, convertido para integer
        }

    }
    else {
        TA1CTL = TASSEL_0 + MC_1;
        TA1CCR1 = 0;// % *
    }

}

int main(void)
{

    WDTCTL = WDTPW | WDTHOLD;   // stop watchdog timer
    setup_PWM();
    testbenchl();


    while(1){
       check_motor();
       delay();
       temp_atual = 50;
       check_motor();
       delay();
       temp_atual = 80;
       check_motor();
       delay();
       temp_atual = 130;
       check_motor();
       delay();
       temp_atual = 160;
       check_motor();
       delay();
       temp_atual = 30;
       check_motor();
       delay();
       temp_atual = 30;
    }
    return 0;
}
//funciona

